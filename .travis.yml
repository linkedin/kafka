#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

sudo: required
dist: trusty
language: java

env:
  global:
    # These secure values are encrypted for linkedin/kafka. For use in forked repos, set env vars in your own build - they should win over these (as these won't be decodable in forked builds).
    - secure: PF5bwSD7RX+mouOZDTW65AB7AAtB3gr7bMrtA1I2Gas1Qd3EtySvOrFraSjJX9m7CVJOvIVeUEtSlsuINprvi0Z9w3qcPHGEIgGI7BWp1t28pfAvL7Uk/9MXkYDdzc/fb7mH3aW2nk4OgIvP0w0CSAfcVwC2/SFBZ6Dv1n3wKIbjd7grVkxZyRZLHekyBqwsS+ks1v5jsRwXEX2qa1mtkcotCKeiazrXwsZm0GPDCkjIFNUHqrmtz9/q24h0EPNPaoclzsWIT6L/+z9s1Zx+5ZKTpbjCYAAf3cmbcdbbLqmsLEmEM9iKmAdwkjrYr+HgFX5mwE2w35hjvBrVakgwKNQpMrUssMduZOfb/ARDhWwjkPU7djJApQeVd6akOLkGf33KbfFJAQ0OGrp9csfo29NGdQsNmn1J6GiAO8uKskMUlbAJATG/mR+jlWIN41bGiT2mokPLyteNjXfpGWC2uyLSQxwd3/wsJR5bPeXDmn7U2J1B5xoCQ96BMMvglIMFWT9cL+D9/cqr4GlTNzZBe8jPLxszkxCfBa4y+JhQjaxfFuPjLcFvEmIi0Mv8iESr7efOOosAsEbhJ/CvWWi8azODrCEsCGT/Jvrl42YR4SqZLYseMp15g9f+8laklkj5BaVDmlPS4rC0s7LU4QSO9D5nG6WmwRpoAVX5mk0wY6k=
    - secure: b7grq1NddpiXq9Kq9Rb4kWsIfiZoIoJaKDIJqMHjSHEuuHuGLQH2Z40eFUFgt3Da9oBvd3LZzK+KvOF5RV7b6Iuv2TjdTKDgxlyDWMrawLDhrGJAic6K++3iTZdC1Czs/KKRxCcs/8ikWmWa5oaTbOK1ME5ezxL3IjBsWtag9f+xwyU9bxl+//9NEAQaZkOOjOkf3xH9FYTMJvCRII/hux7Swclf6wM9rfIko7aRti1lavt/SRY2qojBk/l5IFdNCuJ3meitYWGDABHhy1ziM/OBYIHmr7DXiE8mv3sjzk00NOkuDKr4Rau8ZB1Q/Hy7o22SysOD4o9xuQGAWBL7SWRyB5EqXTJjaV3cSVocteCU8bWW0oqZJyHFKQw6y7K0FweSpmgJsdK9aCX68rzbiSO0oYUz646B5ZXQ6sMAy/tsj7G/6ImcKIZMxWvy+eKntdKIQPzGR1NawSO1b52XMKIvB5c8fwDcfVB8V2Qugyzo/ExzFs+NZhEqqp4ah1TIfjmdY2skH3R98GTNNt4uCf3cdpnwZd0zhjXp9dP5k+/Bd1X9svYxGps6+dy4ITK3QK/bo25Thti2KLceluaAEzoVW2Y+mImu0zTuXPlHoAbJ8/M9UtNpB5M7vcMYrgi2Y6EMakU5mjhdzRTbcC6gmLLdbJuxcbkBtwM/NXE4BLo=

jdk:
  - oraclejdk8
  
before_install:
  - gradle wrapper

# By default, the install step will run ./gradlew assemble, which actually builds. Skip this step and do the actual
# build during the build step.
install: true

# Excluded integration tests for now because Travis will hit build timeout (50 minutes) when including them.
# Also excluded streams unitTest because they often fail with "pure virtual method called" error (KAFKA-3502).
script:
  - ./gradlew clean compileJava compileScala compileTestJava compileTestScala checkstyleMain checkstyleTest findbugsMain unitTest -x :streams:unitTest rat --no-daemon -PxmlFindBugsReport=true -PtestLoggingEvents=started,passed,skipped,failed 

before_cache:
  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/

cache:
  directories:
    - "$HOME/.m2/repository"
    - "$HOME/.gradle/caches/"
    - "$HOME/.gradle/wrapper/"

# This will triger publishing artifacts to bintray upon the creation of a new tag in the "x.y.z.w" format.
deploy:
  provider: script
  script: ./gradlew -Pversion=$TRAVIS_TAG uploadArchivesAll
  skip_cleanup: true
  on:
    tags: true
    all_branches: true
    condition: $TRAVIS_TAG =~ ^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$
